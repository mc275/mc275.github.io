{"meta":{"title":"尺墨轩志的博客","subtitle":"志不强者智不达，言不信者行不果","description":"多传感器融合，导航定位","author":"尺墨轩志","url":"http://chimoxuanzhi.coding.me"},"pages":[{"title":"","date":"2018-03-30T15:06:55.559Z","updated":"2018-03-30T15:06:55.559Z","comments":true,"path":"404.html","permalink":"http://chimoxuanzhi.coding.me/404.html","excerpt":"","text":""},{"title":"","date":"2018-05-03T10:31:38.405Z","updated":"2018-05-03T10:31:38.405Z","comments":true,"path":"baidu_verify_huZUUQHqHR.html","permalink":"http://chimoxuanzhi.coding.me/baidu_verify_huZUUQHqHR.html","excerpt":"","text":"huZUUQHqHR"},{"title":"","date":"2018-03-31T02:02:18.500Z","updated":"2018-03-31T02:02:18.500Z","comments":true,"path":"google302886fb2bf775a6.html","permalink":"http://chimoxuanzhi.coding.me/google302886fb2bf775a6.html","excerpt":"","text":"google-site-verification: google302886fb2bf775a6.html"},{"title":"关于我","date":"2018-03-30T08:52:53.000Z","updated":"2018-05-02T08:13:13.959Z","comments":true,"path":"about/index.html","permalink":"http://chimoxuanzhi.coding.me/about/index.html","excerpt":"","text":"20岁到30岁这十年间，可能是最重要的十年，你要确定自己的世界观、价值观，选择一个合适的人生伴侣，慢慢定下来，可是这期间充满了挫折、怀疑和困惑。 介绍自己是蛮困难的一件事情，自己定位成什么，意味着你想过什么样的生活，还意味着一旦做出介绍，自己的思维就局限于此。到目前为止我都没有想清楚如何用简短的语言来回答“我是谁”这个深奥的哲学问题，所以我尝试不断给自己添加标签，通过标签来具象化自己。 90后、 导航/定位算法工程师、 视觉SLAM、 多传感器融合、 C++、 python、 开源、足球、 阅读、 美剧"},{"title":"分类","date":"2018-03-30T08:50:30.000Z","updated":"2018-05-02T07:58:25.591Z","comments":true,"path":"categories/index.html","permalink":"http://chimoxuanzhi.coding.me/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-03-30T08:45:53.000Z","updated":"2018-03-30T15:06:55.559Z","comments":true,"path":"tags/index.html","permalink":"http://chimoxuanzhi.coding.me/tags/index.html","excerpt":"","text":""},{"title":"","date":"2018-03-30T15:06:55.559Z","updated":"2018-03-30T15:06:55.559Z","comments":true,"path":"404/index.html","permalink":"http://chimoxuanzhi.coding.me/404/index.html","excerpt":"","text":"var NexT = window.NexT || {}; var CONFIG = { root: '/', scheme: 'Gemini', version: '6.0.1', sidebar: {\"position\":\"left\",\"display\":\"post\",\"offset\":12,\"b2t\":true,\"scrollpercent\":true,\"onmobile\":false}, fancybox: false, fastclick: false, lazyload: false, tabs: true, motion: {\"enable\":true,\"async\":false,\"transition\":{\"post_block\":\"fadeIn\",\"post_header\":\"slideDownIn\",\"post_body\":\"slideDownIn\",\"coll_header\":\"slideLeftIn\",\"sidebar\":\"slideUpIn\"}}, algolia: { applicationID: '', apiKey: '', indexName: '', hits: {\"per_page\":10}, labels: {\"input_placeholder\":\"Search for Posts\",\"hits_empty\":\"We didn't find any results for the search: ${query}\",\"hits_stats\":\"${hits} results found in ${time} ms\"} } }; | Fong Ray's Blog var _hmt = _hmt || []; (function() { var hm = document.createElement(\"script\"); hm.src = \"https://hm.baidu.com/hm.js?0dd86dc030c2af1e3ddfefe38f44d297\"; var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(hm, s); })(); .use-motion .motion-element, .use-motion .brand, .use-motion .menu-item, .sidebar-inner, .use-motion .post-block, .use-motion .pagination, .use-motion .comments, .use-motion .post-header, .use-motion .post-body, .use-motion .collection-title { opacity: initial; } .use-motion .logo, .use-motion .site-title, .use-motion .site-subtitle { opacity: initial; top: initial; } .use-motion { .logo-line-before i { left: initial; } .logo-line-after i { right: initial; } } Fong Ray's Blog Eternal vigilance is the price of liberty. 首页 标签26 分类6 归档18 关于 公益404 搜索 Please enable JavaScript to view the comments powered by Disqus. Yi Mu iOS | C/C++ | TED 18 日志 6 分类 26 标签 Links Json Editor Raincal's Blog 0% &copy; 2014 &mdash; 2018 Yi Mu 由 Hexo 强力驱动 | 主题 &mdash; NexT.Gemini v6.0.1 if (Object.prototype.toString.call(window.Promise) !== '[object Function]') { window.Promise = null; } var disqus_config = function () { this.page.url = 'http://fangr.cc/404/index.html'; this.page.identifier = '404/index.html'; this.page.title = ''; }; function loadComments () { var d = document, s = d.createElement('script'); s.src = 'https://fangr-cc.disqus.com/embed.js'; s.setAttribute('data-timestamp', '' + +new Date()); (d.head || d.body).appendChild(s); } loadComments(); // Popup Window; var isfetched = false; var isXml = true; // Search DB path; var search_path = \"search.xml\"; if (search_path.length === 0) { search_path = \"search.xml\"; } else if (/json$/i.test(search_path)) { isXml = false; } var path = \"/\" + search_path; // monitor main search box; var onPopupClose = function (e) { $('.popup').hide(); $('#local-search-input').val(''); $('.search-result-list').remove(); $('#no-result').remove(); $(\".local-search-pop-overlay\").remove(); $('body').css('overflow', ''); } function proceedsearch() { $(\"body\") .append('') .css('overflow', 'hidden'); $('.search-popup-overlay').click(onPopupClose); $('.popup').toggle(); var $localSearchInput = $('#local-search-input'); $localSearchInput.attr(\"autocapitalize\", \"none\"); $localSearchInput.attr(\"autocorrect\", \"off\"); $localSearchInput.focus(); } // search function; var searchFunc = function(path, search_id, content_id) { 'use strict'; // start loading animation $(\"body\") .append('' + '' + '' + '' + '') .css('overflow', 'hidden'); $(\"#search-loading-icon\").css('margin', '20% auto 0 auto').css('text-align', 'center'); $.ajax({ url: path, dataType: isXml ? \"xml\" : \"json\", async: true, success: function(res) { // get the contents from search data isfetched = true; $('.popup').detach().appendTo('.header-inner'); var datas = isXml ? $(\"entry\", res).map(function() { return { title: $(\"title\", this).text(), content: $(\"content\",this).text(), url: $(\"url\" , this).text() }; }).get() : res; var input = document.getElementById(search_id); var resultContent = document.getElementById(content_id); var inputEventFunction = function() { var searchText = input.value.trim().toLowerCase(); var keywords = searchText.split(/[\\s\\-]+/); if (keywords.length > 1) { keywords.push(searchText); } var resultItems = []; if (searchText.length > 0) { // perform local searching datas.forEach(function(data) { var isMatch = false; var hitCount = 0; var searchTextCount = 0; var title = data.title.trim(); var titleInLowerCase = title.toLowerCase(); var content = data.content.trim().replace(/]+>/g,\"\"); var contentInLowerCase = content.toLowerCase(); var articleUrl = decodeURIComponent(data.url); var indexOfTitle = []; var indexOfContent = []; // only match articles with not empty titles if(title != '') { keywords.forEach(function(keyword) { function getIndexByWord(word, text, caseSensitive) { var wordLen = word.length; if (wordLen === 0) { return []; } var startPosition = 0, position = [], index = []; if (!caseSensitive) { text = text.toLowerCase(); word = word.toLowerCase(); } while ((position = text.indexOf(word, startPosition)) > -1) { index.push({position: position, word: word}); startPosition = position + wordLen; } return index; } indexOfTitle = indexOfTitle.concat(getIndexByWord(keyword, titleInLowerCase, false)); indexOfContent = indexOfContent.concat(getIndexByWord(keyword, contentInLowerCase, false)); }); if (indexOfTitle.length > 0 || indexOfContent.length > 0) { isMatch = true; hitCount = indexOfTitle.length + indexOfContent.length; } } // show search results if (isMatch) { // sort index by position of keyword [indexOfTitle, indexOfContent].forEach(function (index) { index.sort(function (itemLeft, itemRight) { if (itemRight.position !== itemLeft.position) { return itemRight.position - itemLeft.position; } else { return itemLeft.word.length - itemRight.word.length; } }); }); // merge hits into slices function mergeIntoSlice(text, start, end, index) { var item = index[index.length - 1]; var position = item.position; var word = item.word; var hits = []; var searchTextCountInSlice = 0; while (position + word.length position) { index.pop(); } else { break; } } } searchTextCount += searchTextCountInSlice; return { hits: hits, start: start, end: end, searchTextCount: searchTextCountInSlice }; } var slicesOfTitle = []; if (indexOfTitle.length != 0) { slicesOfTitle.push(mergeIntoSlice(title, 0, title.length, indexOfTitle)); } var slicesOfContent = []; while (indexOfContent.length != 0) { var item = indexOfContent[indexOfContent.length - 1]; var position = item.position; var word = item.word; // cut out 100 characters var start = position - 20; var end = position + 80; if(start < 0){ start = 0; } if (end < position + word.length) { end = position + word.length; } if(end > content.length){ end = content.length; } slicesOfContent.push(mergeIntoSlice(content, start, end, indexOfContent)); } // sort slices in content by search text's count and hits' count slicesOfContent.sort(function (sliceLeft, sliceRight) { if (sliceLeft.searchTextCount !== sliceRight.searchTextCount) { return sliceRight.searchTextCount - sliceLeft.searchTextCount; } else if (sliceLeft.hits.length !== sliceRight.hits.length) { return sliceRight.hits.length - sliceLeft.hits.length; } else { return sliceLeft.start - sliceRight.start; } }); // select top N slices in content var upperBound = parseInt('1'); if (upperBound >= 0) { slicesOfContent = slicesOfContent.slice(0, upperBound); } // highlight title and content function highlightKeyword(text, slice) { var result = ''; var prevEnd = slice.start; slice.hits.forEach(function (hit) { result += text.substring(prevEnd, hit.position); var end = hit.position + hit.length; result += '' + text.substring(hit.position, end) + ''; prevEnd = end; }); result += text.substring(prevEnd, slice.end); return result; } var resultItem = ''; if (slicesOfTitle.length != 0) { resultItem += \"\" + highlightKeyword(title, slicesOfTitle[0]) + \"\"; } else { resultItem += \"\" + title + \"\"; } slicesOfContent.forEach(function (slice) { resultItem += \"\" + \"\" + highlightKeyword(content, slice) + \"...\" + \"\"; }); resultItem += \"\"; resultItems.push({ item: resultItem, searchTextCount: searchTextCount, hitCount: hitCount, id: resultItems.length }); } }) }; if (keywords.length === 1 && keywords[0] === \"\") { resultContent.innerHTML = '' } else if (resultItems.length === 0) { resultContent.innerHTML = '' } else { resultItems.sort(function (resultLeft, resultRight) { if (resultLeft.searchTextCount !== resultRight.searchTextCount) { return resultRight.searchTextCount - resultLeft.searchTextCount; } else if (resultLeft.hitCount !== resultRight.hitCount) { return resultRight.hitCount - resultLeft.hitCount; } else { return resultRight.id - resultLeft.id; } }); var searchResultList = ''; resultItems.forEach(function (result) { searchResultList += result.item; }) searchResultList += \"\"; resultContent.innerHTML = searchResultList; } } if ('auto' === 'auto') { input.addEventListener('input', inputEventFunction); } else { $('.search-icon').click(inputEventFunction); input.addEventListener('keypress', function (event) { if (event.keyCode === 13) { inputEventFunction(); } }); } // remove loading animation $(\".local-search-pop-overlay\").remove(); $('body').css('overflow', ''); proceedsearch(); } }); } // handle and trigger popup window; $('.popup-trigger').click(function(e) { e.stopPropagation(); if (isfetched === false) { searchFunc(path, 'local-search-input', 'local-search-result'); } else { proceedsearch(); }; }); $('.popup-btn-close').click(onPopupClose); $('.popup').click(function(e){ e.stopPropagation(); }); $(document).on('keyup', function (event) { var shouldDismissSearchPopup = event.which === 27 && $('.search-popup').is(':visible'); if (shouldDismissSearchPopup) { onPopupClose(); } }); (function(){ var bp = document.createElement('script'); var curProtocol = window.location.protocol.split(':')[0]; if (curProtocol === 'https'){ bp.src = 'https://zz.bdstatic.com/linksubmit/push.js'; } else{ bp.src = 'http://push.zhanzhang.baidu.com/push.js'; } var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(bp, s); })();"}],"posts":[{"title":"Markdown语法介绍","slug":"Markdown语法介绍","date":"2018-04-02T02:09:00.000Z","updated":"2018-05-03T13:39:21.623Z","comments":true,"path":"Markdown语法介绍.html","link":"","permalink":"http://chimoxuanzhi.coding.me/Markdown语法介绍.html","excerpt":"前言最近准备开始写博客，整理自己学习的技术知识。但手动调整博客的文本格式实在太不美观和geek，因而选择Markdown排版博客内容。Markdown是一种轻量级标记语言，且兼容HTML。可通过标记符号设置文本格式，让作者专注于写作内容，当前的主流博客网站和GitHub版块多采用Markdown。 Markdown将格式对象主要分为区块元素和区段元素两部分。区块元素主要包括段落，换行，标题，区块引用，列表和分割线；区段元素包括强调，链接，图片和代码块。","text":"前言最近准备开始写博客，整理自己学习的技术知识。但手动调整博客的文本格式实在太不美观和geek，因而选择Markdown排版博客内容。Markdown是一种轻量级标记语言，且兼容HTML。可通过标记符号设置文本格式，让作者专注于写作内容，当前的主流博客网站和GitHub版块多采用Markdown。 Markdown将格式对象主要分为区块元素和区段元素两部分。区块元素主要包括段落，换行，标题，区块引用，列表和分割线；区段元素包括强调，链接，图片和代码块。 区块元素段落和换行Markdown中段落是由一个或多个连续的本文组成，段落前后应该有1个以上的空行，单独的换行符不会实现段落换行。如果不想插入空行进行换行，可以在换行符前插入2个以上的空格来实现段落换行。例如： 第一段 第二段 或 第一段(两空格)第二段 标题在标题文本前使用“#”，并用空格分割可以创建一级标题。如果需要创建多级标题，可使用不同数量的“#”，最多可创建6级标题。如下所示： # 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 区块引用Markdown标记区块引用时，在每行的开头添加符号”&gt;”或在每段的第一行开头添加”&gt;”，如下所示： > This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit.Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. 或 > This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit.>Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. 效果如下： This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit.Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. 另外区块引用允许多级嵌套，只需根据层次添加不同数量的”&gt;”。例如： > 这是第一级引用。>> > 这是第二级引用。>> 现在回到第一级引用。 效果如下 这是第一级引用。 这是第二级引用。 现在回到第一级引用。 列表Markdown支持有序列表和无序列表。 无序列表使用“*”，”+”和”-“作为记号，通常放在最左侧，记号与文本间用空格分割。 * 列表1 * 列表2 * 列表3 效果如下 列表1 列表2 列表3 有序列表使用数字加英文句号作为记号，记号与文本间用空格分割，且有序列表的序号与记号中的数字无关。例如以下两组列表，生成的列表序号相同。 1. 列表1 2. 列表2 3. 列表3 与 1. 列表1 1. 列表2 1. 列表3 效果如下 列表1 列表2 列表3 如果需要在列表中加入区块引用或代码块，则整个区块或代码块需整体缩进4个空格或一个制表符，例如： * 列表1&nbsp; &nbsp; &nbsp; &nbsp; > 引用内容 效果如下所示 列表1 引用内容 分割线在单独的一行中使用三个以上的星号”*”，减号“-”或底线”_”来创建分割线，且行内不能再有其他内容。 ___ *** --- 效果如下 区段元素强调强调包括斜体和加粗两种方式。 斜体使用一对“*”包裹需要强调的文字，例如: *斜体* 其效果为：斜体 加粗使用一对“**”包裹需要强调的文字，例如： **加粗** 其效果为：加粗 代码块标记代码块的方式有两种。一种是通过缩进4个空格或1个制表符进行标记；更常用的方法是使用反引号将代码块包裹起来，避免无休止的缩进。该方法可指定语言标识，对标记的代码块启用语法着色。例如： ```pythonimport sysimg_list_in = open(sys.argv[1])``` 效果如下：12import sysimg_list_in = open(sys.argv[1]) 链接Markdown支持两种链接的表示方式：内联式和引用式。 内联式的表示形式为 [text] (URL)。其中，[]中的内容是链接文字，()中的内容是链接地址。例如： This is [GitHub] (https://www.github.com) link. 效果如下This is GitHub link. 引用式的表示方式为 [text] [id] [id]: URL 例如： This is [GitHub] [github] link. [github]: https://www.github.com 效果如下：This is GitHub link. 插入图片Markdown使用与链接相似的语法来插入图片，也可分为内联式和引用式。 内联式插入图片的语法为： ![text] (URL) 引用式插入图片的语法为： ![text] [id] [id]: URL 例如： ![CR7](http://bestsportsshots.com/wp-content/uploads/2018/01/cr7-power.jpg) 或 ![CR7] [player] [player]: http://bestsportsshots.com/wp-content/uploads/2018/01/cr7-power.jpg 效果如下 需要注意的是，Markdown无法指定插入图片的宽高。如果需要，可以使用 &lt;img>标签。","categories":[{"name":"Coding","slug":"Coding","permalink":"http://chimoxuanzhi.coding.me/categories/Coding/"}],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"http://chimoxuanzhi.coding.me/tags/Markdown/"}]}]}